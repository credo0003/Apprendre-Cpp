let currentLesson = 0;
let lessons = [];

// Charger les le√ßons dynamiquement depuis une API (√† remplacer par une API r√©elle)
fetch("https://api.example.com/cpp-lessons") // Remplacer par une API r√©elle
    .then(response => response.json())
    .then(data => {
        lessons = data;
        afficherLecon();
    })
    .catch(error => console.error("Erreur de chargement des le√ßons :", error));

function afficherLecon() {
    if (currentLesson < lessons.length) {
        document.getElementById("lessonTitle").innerText = lessons[currentLesson].title;
        document.getElementById("lessonContent").innerText = lessons[currentLesson].content;

        if (lessons[currentLesson].code) {
            document.getElementById("lessonCode").style.display = "block";
            document.getElementById("lessonCode").innerText = lessons[currentLesson].code;
        } else {
            document.getElementById("lessonCode").style.display = "none";
        }
    } else {
        document.getElementById("lessonTitle").innerText = "üéâ Bravo !";
        document.getElementById("lessonContent").innerText = "Tu as compl√©t√© toutes les le√ßons !";
        document.getElementById("lessonCode").style.display = "none";
        document.getElementById("nextLesson").style.display = "none";
    }
}

function prochaineLecon() {
    currentLesson++;
    afficherLecon();
}

function afficherLecons() {
    alert("üìñ Fonctionnalit√© en cours de d√©veloppement !");
}

function afficherExercices() {
    alert("üìù Fonctionnalit√© en cours de d√©veloppement !");
}

function afficherProgression() {
    alert("üèÜ Fonctionnalit√© en cours de d√©veloppement !");
}